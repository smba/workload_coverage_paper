% Generated by IEEEtran.bst, version: 1.14 (2015/08/26)
\begin{thebibliography}{10}
\providecommand{\url}[1]{#1}
\csname url@samestyle\endcsname
\providecommand{\newblock}{\relax}
\providecommand{\bibinfo}[2]{#2}
\providecommand{\BIBentrySTDinterwordspacing}{\spaceskip=0pt\relax}
\providecommand{\BIBentryALTinterwordstretchfactor}{4}
\providecommand{\BIBentryALTinterwordspacing}{\spaceskip=\fontdimen2\font plus
\BIBentryALTinterwordstretchfactor\fontdimen3\font minus
  \fontdimen4\font\relax}
\providecommand{\BIBforeignlanguage}[2]{{%
\expandafter\ifx\csname l@#1\endcsname\relax
\typeout{** WARNING: IEEEtran.bst: No hyphenation pattern has been}%
\typeout{** loaded for the language `#1'. Using the pattern for}%
\typeout{** the default language instead.}%
\else
\language=\csname l@#1\endcsname
\fi
#2}}
\providecommand{\BIBdecl}{\relax}
\BIBdecl

\bibitem{dorn2020}
J.~Dorn, S.~Apel, and N.~Siegmund, ``Mastering uncertainty in performance
  estimations of configurable software systems,'' in \emph{Proceedings of the
  International Conference on Automated Software Engineering (ASE)}.\hskip 1em
  plus 0.5em minus 0.4em\relax ACM, 2020, pp. 684--696.

\bibitem{siegmundPerformanceinfluenceModelsHighly2015}
N.~Siegmund, A.~Grebhahn, S.~Apel, and C.~K\"astner, ``{Performance-Influence
  Models for Highly Configurable Systems},'' in \emph{Proceedings of the Joint
  Meeting of the European Software Engineering Conference and the ACM SIGSOFT
  Symposium on the Foundations of Software Engineering (ESEC/FSE)}.\hskip 1em
  plus 0.5em minus 0.4em\relax ACM, 2015, pp. 284--294.

\bibitem{haDeepPerf2019}
H.~Ha and H.~Zhang, ``{DeepPerf: Performance Prediction for Configurable
  Software with Deep Sparse Neural Network},'' in \emph{Proceedings of the
  International Conference on Software Engineering (ICSE)}.\hskip 1em plus
  0.5em minus 0.4em\relax IEEE, 2019, pp. 1095--1106.

\bibitem{perfAL}
Y.~Shu, Y.~Sui, H.~Zhang, and G.~Xu, ``Perf-al: Performance prediction for
  configurable software through adversarial learning,'' in \emph{Proceedings of
  the International Symposium on Empirical Software Engineering and Measurement
  (ESEM)}.\hskip 1em plus 0.5em minus 0.4em\relax ACM, 2020.

\bibitem{guoVariabilityawarePerformancePrediction2013}
J.~Guo, K.~Czarnecki, S.~Apel, N.~Siegmund, and A.~Wasowski,
  ``{Variability-aware Performance Prediction: A Statistical Learning
  Approach},'' in \emph{Proceedings of the International Conference on
  Automated Software Engineering (ASE)}.\hskip 1em plus 0.5em minus 0.4em\relax
  IEEE, 2013, pp. 301--311.

\bibitem{sarkarCostEfficientSamplingPerformance}
A.~Sarkar, J.~Guo, N.~Siegmund, S.~Apel, and K.~Czarnecki, ``{Cost-Efficient
  Sampling for Performance Prediction of Configurable Systems},'' in
  \emph{Proceedings of the International Conference on Automated Software
  Engineering (ASE)}.\hskip 1em plus 0.5em minus 0.4em\relax IEEE, 2015, pp.
  342--352.

\bibitem{guo_2018_data}
J.~Guo, D.~Yang, N.~Siegmund, S.~Apel, A.~Sarkar, P.~Valov, K.~Czarnecki,
  A.~Wasowski, and H.~Yu, ``Data-efficient performance learning for
  configurable systems,'' \emph{Empirical Software Engineering}, vol.~23,
  no.~3, pp. 1826--1867, 2018.

\bibitem{fourier_learning_2015}
Y.~Zhang, J.~Guo, E.~Blais, and K.~Czarnecki, ``Performance prediction of
  configurable software systems by fourier learning (t),'' in \emph{Proceedings
  of the International Conference on Automated Software Engineering (ASE)},
  2015, pp. 365--373.

\bibitem{perLasso}
H.~Ha and H.~Zhang, ``Performance-influence model for highly configurable
  software with fourier learning and lasso regression,'' in \emph{Proceedings
  of the International Conference on Software Maintenance and Evolution
  (ICSME)}, 2019, pp. 470--480.

\bibitem{falkner_sat_solvers_2015}
S.~Falkner, M.~Lindauer, and F.~Hutter, ``Spysmac: Automated configuration and
  performance analysis of sat solvers,'' in \emph{Theory and Applications of
  Satisfiability Testing -- SAT 2015}, M.~Heule and S.~Weaver, Eds.\hskip 1em
  plus 0.5em minus 0.4em\relax Springer International Publishing, 2015, pp.
  215--222.

\bibitem{satzilla_2008}
L.~Xu, F.~Hutter, H.~H. Hoos, and K.~Leyton-Brown, ``Satzilla: Portfolio-based
  algorithm selection for sat,'' \emph{Journal of Artificial Intelligence
  Research}, vol.~32, no.~1, p. 565–606, jun 2008.

\bibitem{ding_compilation_2015}
Y.~Ding, J.~Ansel, K.~Veeramachaneni, X.~Shen, U.-M. O’Reilly, and
  S.~Amarasinghe, ``Autotuning algorithmic choice for input sensitivity,''
  \emph{SIGPLAN Not.}, vol.~50, no.~6, p. 379–390, jun 2015.

\bibitem{plotnikov_compilation_2013}
D.~Plotnikov, D.~Melnik, M.~Vardanyan, R.~Buchatskiy, R.~Zhuykov, and J.-H.
  Lee, ``Automatic tuning of compiler optimizations and analysis of their
  impact,'' \emph{Procedia Computer Science}, vol.~18, pp. 1312--1321, 2013,
  2013 International Conference on Computational Science.

\bibitem{maxiaguine_workload_2004}
A.~Maxiaguine, Y.~Liu, S.~Chakraborty, and W.~T. Ooi, ``Identifying
  "representative" workloads in designing mpsoc platforms for media
  processing,'' in \emph{2nd Workshop o nEmbedded Systems for Real-Time
  Multimedia, 2004. ESTImedia 2004.}, 2004, pp. 41--46.

\bibitem{alves_sampling_2020}
J.~A. Pereira, M.~Acher, H.~Martin, and J.-M. J\'{e}z\'{e}quel, ``Sampling
  effect on performance prediction of configurable systems: A case study,'' in
  \emph{Proceedings of the ACM/SPEC International Conference on Performance
  Engineering (ICPE)}.\hskip 1em plus 0.5em minus 0.4em\relax ACM, 2020, p.
  277–288.

\bibitem{khavari_compression_2019}
M.~Khavari~Tavana, Y.~Sun, N.~Bohm~Agostini, and D.~Kaeli, ``Exploiting
  adaptive data compression to improve performance and energy-efficiency of
  compute workloads in multi-gpu systems,'' in \emph{2019 IEEE International
  Parallel and Distributed Processing Symposium (IPDPS)}, 2019, pp. 664--674.

\bibitem{koc_satune_2021}
U.~Koc, A.~Mordahl, S.~Wei, J.~S. Foster, and A.~A. Porter, ``Satune: A
  study-driven auto-tuning approach for configurable software verification
  tools,'' in \emph{Proceedings of the International Conference on Automated
  Software Engineering (ASE)}.\hskip 1em plus 0.5em minus 0.4em\relax IEEE,
  2021, pp. 330--342.

\bibitem{jamshidi_learning_2018}
P.~Jamshidi, M.~Velez, C.~K\"{a}stner, and N.~Siegmund, ``Learning to sample:
  Exploiting similarities across environments to learn performance models for
  configurable systems,'' in \emph{Proceedings of the Joint Meeting of the
  European Software Engineering Conference and the ACM SIGSOFT Symposium on the
  Foundations of Software Engineering (ESEC/FSE)}.\hskip 1em plus 0.5em minus
  0.4em\relax ACM, 2018, p. 71–82.

\bibitem{jamishidi_transfer_2017}
P.~Jamshidi, N.~Siegmund, M.~Velez, C.~K\"{a}stner, A.~Patel, and Y.~Agarwal,
  ``Transfer learning for performance modeling of configurable systems: An
  exploratory analysis,'' in \emph{Proceedings of the International Conference
  on Automated Software Engineering (ASE)}.\hskip 1em plus 0.5em minus
  0.4em\relax IEEE, 2017, p. 497–508.

\bibitem{jamshidi_transfer_gp_2017}
P.~Jamshidi, M.~Velez, C.~K\"{a}stner, N.~Siegmund, and P.~Kawthekar,
  ``Transfer learning for improving model predictions in highly configurable
  software,'' in \emph{Proceedings of the International Symposium on Software
  Engineering for Adaptive and Self-Managing Systems (SEAMS)}.\hskip 1em plus
  0.5em minus 0.4em\relax IEEE, 2017, p. 31–41.

\bibitem{martin_transfer_2021}
H.~Martin, M.~Acher, L.~Lesoil, J.~M. Jezequel, D.~E. Khelladi, and J.~A.
  Pereira, ``Transfer learning across variants and versions: The case of linux
  kernel size,'' \emph{IEEE Transactions on Software Engineering (TSE)}, pp.
  1--1, 2021.

\bibitem{ding_bayesian_2020}
Y.~Ding, A.~Pervaiz, S.~Krishnan, and H.~Hoffmann, ``Bayesian learning for
  hardware and software configuration co-optimization,'' University of Chicago,
  Tech. Rep.~13, Dec. 2020.

\bibitem{analytic_model_2000}
P.~N. Brown, R.~D. Falgout, J.~E. Jones, Jim, and E.~Jones, ``Semicoarsening
  multigrid on distributed memory machines,'' \emph{SIAM Journal on Scientific
  Computing}, vol.~21, pp. 1823--1834, 2000.

\bibitem{analytic_model_2011}
\BIBentryALTinterwordspacing
H.~Gahvari, A.~H. Baker, M.~Schulz, U.~M. Yang, K.~E. Jordan, and W.~Gropp,
  ``Modeling the performance of an algebraic multigrid cycle on hpc
  platforms,'' in \emph{Proceedings of the International Conference on
  Supercomputing}, ser. ICS '11.\hskip 1em plus 0.5em minus 0.4em\relax New
  York, NY, USA: ACM, 2011, p. 172–181. [Online]. Available:
  \url{https://doi.org/10.1145/1995896.1995924}
\BIBentrySTDinterwordspacing

\bibitem{nairUsingBadLearners2017}
V.~Nair, T.~Menzies, N.~Siegmund, and S.~Apel, ``{Using Bad Learners to Find
  Good Configurations},'' in \emph{Proceedings of the Joint Meeting of the
  European Software Engineering Conference and the ACM SIGSOFT Symposium on the
  Foundations of Software Engineering (ESEC/FSE)}.\hskip 1em plus 0.5em minus
  0.4em\relax ACM, 2017, pp. 257--267.

\bibitem{nairFlash18}
V.~{Nair}, Z.~{Yu}, T.~{Menzies}, N.~{Siegmund}, and S.~{Apel}, ``Finding
  faster configurations using flash,'' \emph{IEEE Transactions on Software
  Engineering (TSE)}, vol.~46, no.~7, pp. 794--811, 2020.

\bibitem{ohFindingNearoptimalConfigurations2017}
J.~Oh, D.~Batory, M.~Myers, and N.~Siegmund, ``{Finding Near-Optimal
  Configurations in Product Lines by Random Sampling},'' in \emph{Proceedings
  of the Joint Meeting of the European Software Engineering Conference and the
  ACM SIGSOFT Symposium on the Foundations of Software Engineering
  (ESEC/FSE)}.\hskip 1em plus 0.5em minus 0.4em\relax ACM, 2017, pp. 61--71.

\bibitem{kaltenecker_interplay_2020}
C.~Kaltenecker, A.~Grebhahn, N.~Siegmund, and S.~Apel, ``The interplay of
  sampling and machine learning for software performance prediction,''
  \emph{IEEE Software}, vol.~PP, 04 2020.

\bibitem{siegmundPredictingPerformanceAutomated2012}
N.~Siegmund, S.~Kolesnikov, C.~Kästner, S.~Apel, D.~Batory, M.~Rosenmüller,
  and G.~Saake, ``{Predicting Performance via Automated Feature-Interaction
  Detection},'' in \emph{Proceedings of the International Conference on
  Software Engineering (ICSE)}.\hskip 1em plus 0.5em minus 0.4em\relax IEEE,
  2012, pp. 167--177.

\bibitem{kaltenecker_distance-based_2019}
C.~Kaltenecker, A.~Grebhahn, N.~Siegmund, J.~Guo, and S.~Apel,
  ``{Distance-based Sampling of Software Configuration Spaces},'' in
  \emph{Proceedings of the International Conference on Software Engineering
  (ICSE)}.\hskip 1em plus 0.5em minus 0.4em\relax IEEE, 2019, pp. 1084--1094.

\bibitem{velez_2020_configcrusher_jase}
M.~Velez, P.~Jamshidi, F.~Sattler, N.~Siegmund, S.~Apel, and C.~K{\"a}stner,
  ``Configcrusher: Towards white-box performance analysis for configurable
  systems,'' \emph{Automated Software Engineering (ASE)}, pp. 1--36, 2020.

\bibitem{velez_comprex_2021}
M.~Velez, P.~Jamshidi, N.~Siegmund, S.~Apel, and C.~Kästner, ``White-box
  analysis over machine learning: Modeling performance of configurable
  systems,'' in \emph{Proceedings of the International Conference on Software
  Engineering (ICSE)}.\hskip 1em plus 0.5em minus 0.4em\relax IEEE, 2021, pp.
  1072--1084.

\bibitem{weber_white_2021}
M.~Weber, S.~Apel, and N.~Siegmund, ``White-box performance-influence models: A
  profiling and learning approach.''\hskip 1em plus 0.5em minus 0.4em\relax
  IEEE, 2021, pp. 1059--1071.

\bibitem{ceesay2020}
S.~Ceesay, Y.~Lin, and A.~Barker, ``A survey: Benchmarking and performance
  modelling of data intensive applications,'' in \emph{IEEE/ACM International
  Conference on Big Data Computing, Applications and Technologies (BDCAT)},
  2020, pp. 67--76.

\bibitem{papadopoulos2021}
A.~V. Papadopoulos, L.~Versluis, A.~Bauer, N.~Herbst, J.~v. Kistowski,
  A.~Ali-Eldin, C.~L. Abad, J.~N. Amaral, P.~Tůma, and A.~Iosup,
  ``Methodological principles for reproducible performance evaluation in cloud
  computing,'' \emph{IEEE Transactions on Software Engineering (TSE)}, vol.~47,
  no.~8, pp. 1528--1543, 2021.

\bibitem{calzarossa2016}
\BIBentryALTinterwordspacing
M.~C. Calzarossa, L.~Massari, and D.~Tessera, ``Workload characterization: A
  survey revisited,'' \emph{ACM Computer Survey}, vol.~48, no.~3, Feb. 2016.
  [Online]. Available: \url{https://doi.org/10.1145/2856127}
\BIBentrySTDinterwordspacing

\bibitem{jiang2015survey}
Z.~M. Jiang and A.~E. Hassan, ``A survey on load testing of large-scale
  software systems,'' \emph{IEEE Transactions on Software Engineering (TSE)},
  vol.~41, no.~11, pp. 1091--1118, 2015.

\bibitem{liao_2020_using_emse}
L.~Liao, J.~Chen, H.~Li, Y.~Zeng, W.~Shang, J.~Guo, C.~Sporea, A.~Toma, and
  S.~Sajedi, ``Using black-box performance models to detect performance
  regressions under varying workloads: an empirical study,'' \emph{Empirical
  Software Engineering (ESE)}, pp. 1--31, 2020.

\bibitem{valov_transferring_performance_2017}
P.~Valov, J.-C. Petkovich, J.~Guo, S.~Fischmeister, and K.~Czarnecki,
  ``Transferring performance prediction models across different hardware
  platforms,'' in \emph{ICPE}.\hskip 1em plus 0.5em minus 0.4em\relax ACM,
  2017, p. 39–50.

\bibitem{benchmarking_book}
S.~Kounev, K.-D. Lange, and J.~von Kistowski, \emph{{Systems Benchmarking}},
  1st~ed.\hskip 1em plus 0.5em minus 0.4em\relax Springer International
  Publishing, 2020.

\bibitem{difallah_oltp_2013}
D.~E. Difallah, A.~Pavlo, C.~Curino, and P.~Cudre-Mauroux, ``{OLTP-Bench: An
  Extensible Testbed for Benchmarking Relational Databases},''
  \emph{Proceedings of the VLDB Endowment}, vol.~7, no.~4, pp. 277--288, Dec.
  2013.

\bibitem{henardCombining2015}
C.~{Henard}, M.~{Papadakis}, M.~{Harman}, and Y.~{Le Traon}, ``{Combining
  Multi-Objective Search and Constraint Solving for Configuring Large Software
  Product Lines},'' in \emph{Proceedings of the International Conference on
  Software Engineering (ICSE)}.\hskip 1em plus 0.5em minus 0.4em\relax IEEE,
  2015, pp. 517--528.

\bibitem{lovric_international_2010}
M.~Lovric, \emph{International {Encyclopedia} of {Statistical} {Science}},
  1st~ed.\hskip 1em plus 0.5em minus 0.4em\relax Springer, Dec. 2010.

\bibitem{curtsinger_stabilizer_2013}
C.~Curtsinger and E.~D. Berger, ``Stabilizer: Statistically sound performance
  evaluation,'' in \emph{Proceedings of the Eighteenth International Conference
  on Architectural Support for Programming Languages and Operating Systems},
  ser. ASPLOS '13.\hskip 1em plus 0.5em minus 0.4em\relax ACM, 2013, p.
  219–228.

\bibitem{maricq2018taming}
A.~Maricq, D.~Duplyakin, I.~Jimenez, C.~Maltzahn, R.~Stutsman, and R.~Ricci,
  ``Taming performance variability,'' in \emph{13th USENIX Symposium on
  Operating Systems Design and Implementation (OSDI 18)}, 2018, pp. 409--425.

\bibitem{romano2006exploring}
J.~Romano, J.~D. Kromrey, J.~Coraggio, J.~Skowronek, and L.~Devine, ``Exploring
  methods for evaluating group differences on the nsse and other surveys: Are
  the t-test and cohen’s d indices the most appropriate choices?'' in
  \emph{Annual Meeting of the Southern Association for Institutional Research},
  2006, pp. 1--51.

\bibitem{Cliff1993DominanceSO}
N.~Cliff, ``Dominance statistics: Ordinal analyses to answer ordinal
  questions.'' \emph{Psychological Bulletin}, vol. 114, pp. 494--509, 1993.

\bibitem{kendall1938new}
M.~G. Kendall, ``A new measure of rank correlation,'' \emph{Biometrika},
  vol.~30, no. 1/2, pp. 81--93, 1938.

\bibitem{Daoud_2017}
\BIBentryALTinterwordspacing
J.~I. Daoud, ``Multicollinearity and regression analysis,'' \emph{Journal of
  Physics: Conference Series}, vol. 949, p. 012009, dec 2017. [Online].
  Available: \url{https://doi.org/10.1088/1742-6596/949/1/012009}
\BIBentrySTDinterwordspacing

\bibitem{o2007caution}
R.~M. O'Brien, ``A caution regarding rules of thumb for variance inflation
  factors,'' \emph{Quality \& Quantity}, vol.~41, no.~5, pp. 673--690, 2007.

\bibitem{rubin_feature_2013}
J.~Rubin and M.~Chechik, ``{A Survey of Feature Location Techniques},'' in
  \emph{{Domain Engineering: Product Lines, Languages, and Conceptual Models}},
  I.~Reinhartz-Berger, A.~Sturm, T.~Clark, S.~Cohen, and J.~Bettin, Eds.\hskip
  1em plus 0.5em minus 0.4em\relax Springer, 2013, pp. 29--58.

\bibitem{lillack_2018_lotrack_tse}
M.~Lillack, C.~Kästner, and E.~Bodden, ``Tracking load-time configuration
  options,'' \emph{IEEE Transactions on Software Engineering (TSE)}, vol.~44,
  no.~12, pp. 1269--1291, 2018.

\bibitem{luo_2019_cova}
L.~Luo, E.~Bodden, and J.~Späth, ``A qualitative analysis of android
  taint-analysis results,'' in \emph{Proceedings of the International
  Conference on Automated Software Engineering (ASE)}.\hskip 1em plus 0.5em
  minus 0.4em\relax IEEE, 2019, pp. 102--114.

\bibitem{bell_phosphor_2014}
J.~Bell and G.~Kaiser, ``Phosphor: Illuminating dynamic data flow in commodity
  jvms,'' \emph{ACM SIGPLAN Notices}, vol.~49, no.~10, p. 83–101, Oct. 2014.

\bibitem{splat_kim_2013}
C.~H.~P. Kim, D.~Marinov, S.~Khurshid, D.~Batory, S.~Souto, P.~Barros, and
  M.~D'Amorim, ``Splat: Lightweight dynamic analysis for reducing combinatorics
  in testing configurable systems,'' in \emph{Proceedings of the Joint Meeting
  of the European Software Engineering Conference and the ACM SIGSOFT Symposium
  on the Foundations of Software Engineering (ESEC/FSE)}.\hskip 1em plus 0.5em
  minus 0.4em\relax ACM, 2013, pp. 257--267.

\bibitem{wong_integrated_2005}
W.~E. Wong and J.~Li, ``An integrated solution for testing and analyzing {Java}
  applications in an industrial setting,'' in \emph{Proceedings of the
  Asia-Pacific Conference on Software Engineering (ASPEC)}, 2005, p.~8.

\bibitem{sulir_annotation_2015}
M.~Sulír and J.~Porubän, ``{Semi-automatic concern annotation using
  differential code coverage},'' in \emph{Proceedings of the IEEE International
  Scientific Conference on Informatics (ISCI)}, 2015, pp. 258--262.

\bibitem{michelon_spectrum_2021}
G.~K. Michelon, B.~Sotto-Mayor, J.~Martinez, A.~Arrieta, R.~Abreu, and W.~K.
  Assun{\c{c}}{\~a}o, ``Spectrum-based feature localization: a case study using
  argouml,'' in \emph{Proceedings of the International Conference on Software
  Product Lines (SPLC)}.\hskip 1em plus 0.5em minus 0.4em\relax ACM, 2021, pp.
  126--130.

\bibitem{perez_framing_2016}
A.~Perez and R.~Abreu, ``Framing program comprehension as fault localization,''
  \emph{Journal of Software: Evolution and Process}, vol.~28, pp. 840--862,
  2016.

\bibitem{wilde_early_1996}
N.~Wilde and C.~Casey, ``Early {Field} {Experience} with the {Software}
  {Reconnaissance} {Technique} for {Program} {Comprehension},'' in
  \emph{Proceedings of the International Conference on Software Maintenance
  (ICSM)}, 1996, pp. 312--318.

\bibitem{wilde_reconnaissance_1995}
N.~Wilde and M.~C. Scully, ``Software reconnaissance: Mapping program features
  to code,'' \emph{Journal of Software Maintenance: Research and Practice},
  vol.~7, no.~1, pp. 49--62, 1995.

\bibitem{sherwood_reducing_nodate}
K.~D. Sherwood and G.~C. Murphy, ``Reducing {Code} {Navigation} {Effort} with
  {Differential} {Code} {Coverage},'' Department of Computer Science,
  University of British Columbia, Tech. Rep.~14, 2008.

\bibitem{perez_diagnosis_2014}
A.~Perez and R.~Abreu, ``A diagnosis-based approach to software
  comprehension,'' in \emph{Proceedings of the International Conference on
  Program Comprehension (ICPC)}.\hskip 1em plus 0.5em minus 0.4em\relax ACM,
  2014, pp. 37--47.

\bibitem{castro_pangolin_2019}
B.~Castro, A.~Perez, and R.~Abreu, ``Pangolin: An sfl-based toolset for feature
  localization,'' in \emph{Proceedings of the International Conference on
  Automated Software Engineering (ASE)}.\hskip 1em plus 0.5em minus 0.4em\relax
  IEEE, 2019, pp. 1130--1133.

\bibitem{agrawal_fault_1995}
H.~Agrawal, J.~R. Horgan, S.~London, and W.~E. Wong, ``Fault localization using
  execution slices and dataflow tests,'' in \emph{Proceedings of the
  International Symposium on Software Reliability Engineering (ISSRE)}, 1995,
  pp. 143--151.

\bibitem{wong_faultloc_2016}
W.~E. Wong, R.~Gao, Y.~Li, R.~Abreu, and F.~Wotawa, ``A survey on software
  fault localization,'' \emph{IEEE Transactions on Software Engineering (TSE)},
  vol.~42, no.~8, pp. 707--740, 2016.

\end{thebibliography}
